<!DOCTYPE html>

<html lang="pt-br">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>HS Cozinha Caseira - Cardápio</title>

    <style>

        /* CSS para a estilização do cardápio */

        body {

            font-family: Arial, sans-serif;

            background-color: #f4f4f4;

            margin: 0;

            padding: 0;

            color: #333;

        }

 

        .container {

            max-width: 900px;

            margin: 20px auto;

            padding: 20px;

            background-color: #fff;

            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);

            border-radius: 8px;

        }

 

        header {

            text-align: center;

            padding-bottom: 20px;

            border-bottom: 2px solid #ddd;

        }

 

        header h1 {

            color: #5a5a5a;

        }

 

        .menu-options {

            text-align: center;

            margin-top: 20px;

        }

 

        .menu-options button {

            padding: 10px 20px;

            margin: 5px;

            border: 1px solid #ccc;

            border-radius: 5px;

            background-color: #f9f9f9;

            cursor: pointer;

            transition: background-color 0.3s;

        }

 

        .menu-options button:hover {

            background-color: #e2e2e2;

        }

 

        .menu-options button.active {

            background-color: #5a5a5a;

            color: #fff;

        }

 

        .menu-item {

            display: flex;

            align-items: center;

            border-bottom: 1px solid #eee;

            padding: 15px 0;

        }

 

        .menu-item img {

            width: 120px;

            height: 120px;

            object-fit: cover;

            border-radius: 8px;

            margin-right: 15px;

        }

 

        .item-details {

            flex-grow: 1;

        }

 

        .item-details h3 {

            margin: 0 0 5px;

        }

 

        .item-details p {

            margin: 0;

            font-size: 14px;

            color: #666;

        }

 

        .price-and-stock {

            display: flex;

            align-items: center;

            margin-top: 5px;

        }

 

        .price-and-stock .price {

            font-weight: bold;

            color: #388e3c;

            font-size: 18px;

            margin-right: 15px;

        }

       

        .stock-info {

            font-size: 14px;

            color: #f44336;

        }

 

        .stock-info.available {

            color: #4caf50;

        }

 

        .order-section {

            padding: 20px 0;

        }

 

        .order-section h2 {

            border-bottom: 1px solid #ddd;

            padding-bottom: 10px;

            margin-bottom: 20px;

        }

 

        .order-item {

            display: flex;

            justify-content: space-between;

            align-items: center;

            padding: 10px 0;

            border-bottom: 1px dashed #ccc;

        }

 

        .order-total {

            text-align: right;

            font-size: 20px;

            font-weight: bold;

            margin-top: 20px;

        }

 

        .order-button {

            display: block;

            width: 100%;

            padding: 15px;

            margin-top: 20px;

            background-color: #25d366; /* WhatsApp Green */

            color: #fff;

            border: none;

            border-radius: 8px;

            font-size: 18px;

            cursor: pointer;

            text-align: center;

        }

 

        .form-section {

            padding: 20px 0;

        }

 

        .form-section label {

            display: block;

            margin-bottom: 5px;

            font-weight: bold;

        }

 

        .form-section input, .form-section textarea, .form-section select {

            width: 100%;

            padding: 10px;

            margin-bottom: 15px;

            border: 1px solid #ccc;

            border-radius: 4px;

        }

 

        .payment-options {

            display: flex;

            flex-wrap: wrap;

            gap: 10px;

            margin-bottom: 15px;

        }

 

        .payment-options button {

            padding: 10px 15px;

            border: 1px solid #ccc;

            background-color: #f9f9f9;

            border-radius: 5px;

            cursor: pointer;

        }

       

        .payment-options button.selected {

            background-color: #4CAF50;

            color: #fff;

        }

 

        /* POP-UP de verificação de estoque */

        .popup-overlay {

            position: fixed;

            top: 0;

            left: 0;

            width: 100%;

            height: 100%;

            background-color: rgba(0, 0, 0, 0.5);

            display: flex;

            justify-content: center;

            align-items: center;

            z-index: 1000;

            visibility: hidden;

            opacity: 0;

            transition: visibility 0s, opacity 0.5s linear;

        }

 

        .popup-overlay.show {

            visibility: visible;

            opacity: 1;

        }

       

        .popup {

            background-color: #fff;

            padding: 30px;

            border-radius: 8px;

            text-align: center;

        }

       

        .popup-buttons {

            margin-top: 20px;

        }

       

        .popup-buttons button {

            padding: 10px 20px;

            margin: 0 5px;

            border: none;

            border-radius: 5px;

            cursor: pointer;

        }

 

    </style>

</head>

<body>

 

    <div class="container">

        <header>

            <h1>HS Cozinha Caseira</h1>

            <p>Marmitinhas Saudáveis - 100% Naturais</p>

        </header>

       

        <div class="menu-options">

            <button id="btn-pronta-entrega">Pronta Entrega</button>

            <button id="btn-all-items" class="active">Todos os Itens</button>

        </div>

 

        <section id="menu-items">

            <p>Carregando cardápio...</p>

        </section>

 

        <hr>

 

        <section class="order-section">

            <h2>Meu Pedido</h2>

            <div id="order-list">

                <p>Nenhum item adicionado.</p>

            </div>

            <div class="order-total">

                Total: <span id="total-price">R$ 0,00</span>

            </div>

        </section>

 

        <hr>

 

        <section class="form-section">

            <h2>Dados para Entrega</h2>

            <form id="delivery-form">

                <label for="nome">Nome Completo</label>

                <input type="text" id="nome" required>

               

                <label for="endereco">Endereço (Rua, Av, etc.)</label>

                <input type="text" id="endereco" required>

               

                <label for="complemento">Complemento (Nº, apto, bloco)</label>

                <input type="text" id="complemento" required>

               

                <label for="telefone">Telefone Celular</label>

                <input type="tel" id="telefone" required>

               

                <label for="observacoes">Observações (opcional, máx. 150 caracteres)</label>

                <textarea id="observacoes" maxlength="150"></textarea>

               

                <label>Forma de Pagamento</label>

                <div class="payment-options">

                    <button type="button" data-payment="débito">Cartão de Débito</button>

                    <button type="button" data-payment="crédito">Cartão de Crédito</button>

                    <button type="button" data-payment="pix">PIX</button>

                    <button type="button" data-payment="dinheiro">Dinheiro</button>

                </div>

 

                <div id="pix-info" style="display: none;">

                    <p>Chave PIX: <strong>11999838162</strong></p>

                </div>

 

                <div id="troco-info" style="display: none;">

                    <label for="valor-dinheiro">Valor para troco</label>

                    <input type="number" id="valor-dinheiro" min="0">

                    <p id="troco-display"></p>

                </div>

            </form>

           

            <button class="order-button" id="submit-order">Fazer Pedido via WhatsApp</button>

        </section>

 

    </div>

   

    <div id="stock-popup" class="popup-overlay">

        <div class="popup">

            <p>Aguarde uns instantes, estamos verificando o estoque.</p>

            <div class="popup-buttons">

                <button onclick="window.location.reload();">Recarregar</button>

            </div>

        </div>

    </div>

 

 

    <script>

        // Variáveis globais e configurações

        const googleAppsScriptUrl = "https://script.google.com/macros/s/AKfycbxJZ2_woAy5-CoAUzMnuaAD56vLVKD3ImX4iLI2m3SCr2c3F68iAjw7siLdSq1LpATwPQ/exec";

        const whatsappNumber = "5511999838162";

        const priceUnit = 22.90;

        const priceCombo = 21.90;

        const comboItems = 5;

        let menuItems = [];

        let order = {};

 

        // Funções para manipulação da página

        async function fetchMenuData() {

            // Lógica para carregar os dados do cardápio e estoque via Google Apps Script

            // Exibir pop-up "aguarde" durante o carregamento

            const popup = document.getElementById('stock-popup');

            popup.classList.add('show');

 

            try {

                const response = await fetch(`${googleAppsScriptUrl}?action=getMenu`);

                if (!response.ok) {

                    throw new Error('Erro ao carregar os dados do cardápio.');

                }

                menuItems = await response.json();

                renderMenu(menuItems);

            } catch (error) {

                console.error("Erro:", error);

                document.getElementById('menu-items').innerHTML = `<p style="color: red;">Erro ao carregar o cardápio. Tente novamente mais tarde.</p>`;

            } finally {

                popup.classList.remove('show');

            }

        }

       

        function renderMenu(items) {

            const menuContainer = document.getElementById('menu-items');

            menuContainer.innerHTML = ''; // Limpa o conteúdo anterior

 

            if (items.length === 0) {

                menuContainer.innerHTML = '<p>Nenhum item disponível no momento.</p>';

                return;

            }

 

            items.forEach(item => {

                const itemDiv = document.createElement('div');

                itemDiv.classList.add('menu-item');

               

                // Lógica de foto com IA: Meramente ilustrativa

                const imageUrl = `https://generative-ai-image-service/image-for-${encodeURIComponent(item.name)}`;

 

                itemDiv.innerHTML = `

                    <img src="${imageUrl}" alt="${item.name}" loading="lazy">

                    <div class="item-details">

                        <h3>${item.name}</h3>

                        <p>${item.description}</p>

                        <div class="price-and-stock">

                            <span class="price">R$ ${priceUnit.toFixed(2)}</span>

                            <span class="stock-info ${item.stock > 0 ? 'available' : ''}">

                                ${item.stock > 0 ? `Em estoque: ${item.stock}` : 'Apenas por encomenda'}

                            </span>

                        </div>

                    </div>

                    <div>

                        <button onclick="addItemToOrder('${item.name}')">Adicionar</button>

                    </div>

                `;

                menuContainer.appendChild(itemDiv);

            });

        }

       

        function addItemToOrder(itemName) {

            // Lógica para adicionar item ao objeto de pedido 'order'

            // Se o item já existe, incrementa a quantidade

            // Se não, adiciona o item com quantidade 1

            if (order[itemName]) {

                order[itemName].quantity++;

            } else {

                order[itemName] = {

                    name: itemName,

                    quantity: 1

                };

            }

            updateOrderDisplay();

        }

 

        function updateOrderDisplay() {

            const orderList = document.getElementById('order-list');

            orderList.innerHTML = '';

            let totalPrice = 0;

            let totalItems = 0;

 

            const itemsInOrder = Object.values(order);

            if (itemsInOrder.length === 0) {

                orderList.innerHTML = '<p>Nenhum item adicionado.</p>';

                return;

            }

 

            itemsInOrder.forEach(item => {

                const itemElement = document.createElement('div');

                itemElement.classList.add('order-item');

                itemElement.innerHTML = `

                    <span>${item.quantity}x ${item.name}</span>

                    <span>R$ ${(item.quantity * priceUnit).toFixed(2)}</span>

                `;

                orderList.appendChild(itemElement);

                totalPrice += item.quantity * priceUnit;

                totalItems += item.quantity;

            });

           

            // Lógica de desconto por combo

            if (totalItems >= comboItems) {

                const totalComboPrice = totalItems * priceCombo;

                document.getElementById('total-price').innerText = `R$ ${totalComboPrice.toFixed(2)} (Valor com desconto do combo)`;

            } else {

                document.getElementById('total-price').innerText = `R$ ${totalPrice.toFixed(2)}`;

            }

        }

       

        function getDeliveryType(item) {

            const stockItem = menuItems.find(i => i.name === item.name);

            if (!stockItem || item.quantity > stockItem.stock || item.observations) {

                return 'encomenda';

            }

            return 'pronta-entrega';

        }

 

        async function submitOrder() {

            const nome = document.getElementById('nome').value;

            const endereco = document.getElementById('endereco').value;

            const complemento = document.getElementById('complemento').value;

            const telefone = document.getElementById('telefone').value;

            const observacoes = document.getElementById('observacoes').value;

            const formaPagamento = document.querySelector('.payment-options button.selected')?.dataset.payment;

           

            if (!nome || !endereco || !complemento || !telefone || !formaPagamento || Object.keys(order).length === 0) {

                alert('Por favor, preencha todos os dados obrigatórios e adicione itens ao pedido.');

                return;

            }

 

            const confirmOrder = window.confirm("Seu pedido está correto? Clique em OK para enviar via WhatsApp.");

            if (!confirmOrder) {

                return;

            }

 

            // Separar itens por tipo de entrega

            const prontaEntregaItems = [];

            const encomendaItems = [];

           

            Object.values(order).forEach(item => {

                if (getDeliveryType(item) === 'pronta-entrega') {

                    prontaEntregaItems.push(item);

                } else {

                    encomendaItems.push(item);

                }

            });

 

            // Gerar a mensagem para o WhatsApp

            let message = `Olá, HS Cozinha Caseira! Gostaria de fazer um novo pedido:\n\n` +

                          `========================\n` +

                          `DADOS PARA ENTREGA:\n` +

                          `Nome: ${nome}\n` +

                          `Endereço: ${endereco}\n` +

                          `Complemento: ${complemento}\n` +

                          `Telefone: ${telefone}\n` +

                          `========================\n` +

                          `MEU PEDIDO:\n`;

 

            if (prontaEntregaItems.length > 0) {

                message += `--- ITENS PRONTA ENTREGA (Entrega no mesmo dia) ---\n`;

                prontaEntregaItems.forEach(item => {

                    message += `- ${item.quantity}x ${item.name}\n`;

                });

            }

 

            if (encomendaItems.length > 0) {

                message += `\n--- ITENS POR ENCOMENDA (Entrega em até 4 dias úteis) ---\n`;

                encomendaItems.forEach(item => {

                    message += `- ${item.quantity}x ${item.name}\n`;

                });

            }

 

            const totalItems = Object.values(order).reduce((sum, item) => sum + item.quantity, 0);

            let totalValue = 0;

            if (totalItems >= comboItems) {

                 totalValue = totalItems * priceCombo;

            } else {

                 totalValue = totalItems * priceUnit;

            }

 

            message += `\nTotal de Itens: ${totalItems}\n`;

            message += `Valor Total: R$ ${totalValue.toFixed(2)}\n`;

            message += `========================\n` +

                       `FORMA DE PAGAMENTO:\n` +

                       `${formaPagamento}\n`;

 

            if (formaPagamento === 'dinheiro') {

                const valorDinheiro = parseFloat(document.getElementById('valor-dinheiro').value);

                const troco = valorDinheiro > totalValue ? valorDinheiro - totalValue : 0;

                message += `(Troco para: R$ ${valorDinheiro.toFixed(2)})\n`;

                message += `(Valor do troco: R$ ${troco.toFixed(2)})\n`;

            } else if (formaPagamento === 'pix') {

                message += `Chave PIX: 11999838162\n`;

            }

 

            // Enviar dados para o Google Apps Script

            const payload = {

                action: 'registerOrder',

                data: {

                    nomeCliente: nome,

                    endereco: endereco,

                    telefoneCelular: telefone,

                    totalPedido: totalValue,

                    formaPagamento: formaPagamento,

                    itensProntaEntrega: prontaEntregaItems.map(item => `${item.quantity}x ${item.name}`).join(', '),

                    itensPorEncomenda: encomendaItems.map(item => `${item.quantity}x ${item.name}`).join(', ')

                }

            };

 

            try {

                await fetch(googleAppsScriptUrl, {

                    method: 'POST',

                    body: JSON.stringify(payload),

                    headers: {

                        'Content-Type': 'application/json'

                    }

                });

               

                // Redirecionar para o WhatsApp

                window.open(`https://wa.me/${whatsappNumber}?text=${encodeURIComponent(message)}`, '_blank');

 

                // Enviar mensagem de agradecimento ao cliente

                const greeting = getGreeting();

                const thankYouMessage = `Olá, ${nome}, ${greeting} HS COZINHA CASEIRA. Seu pedido já consta em nosso sistema e retornaremos o mais breve possível. Qualquer dúvida estaremos à disposição, att. HS COZINHA CASEIRA.`;

                window.open(`https://wa.me/${telefone}?text=${encodeURIComponent(thankYouMessage)}`, '_blank');

               

            } catch (error) {

                alert('Erro ao registrar o pedido. Por favor, tente novamente.');

                console.error("Erro:", error);

            }

        }

       

        function getGreeting() {

            const hour = new Date().getHours();

            if (hour >= 5 && hour < 12) return 'bom dia,';

            if (hour >= 12 && hour < 18) return 'boa tarde,';

            return 'boa noite,';

        }

 

        // Adicionar eventos

        document.getElementById('submit-order').addEventListener('click', submitOrder);

        document.getElementById('btn-pronta-entrega').addEventListener('click', () => {

            document.getElementById('btn-pronta-entrega').classList.add('active');

            document.getElementById('btn-all-items').classList.remove('active');

            const readyItems = menuItems.filter(item => item.stock > 0);

            renderMenu(readyItems);

        });

 

        document.getElementById('btn-all-items').addEventListener('click', () => {

            document.getElementById('btn-all-items').classList.add('active');

            document.getElementById('btn-pronta-entrega').classList.remove('active');

            renderMenu(menuItems);

        });

 

        document.querySelectorAll('.payment-options button').forEach(button => {

            button.addEventListener('click', (e) => {

                document.querySelectorAll('.payment-options button').forEach(btn => btn.classList.remove('selected'));

                e.target.classList.add('selected');

               

                const paymentType = e.target.dataset.payment;

                document.getElementById('pix-info').style.display = 'none';

                document.getElementById('troco-info').style.display = 'none';

 

                if (paymentType === 'pix') {

                    document.getElementById('pix-info').style.display = 'block';

                } else if (paymentType === 'dinheiro') {

                    document.getElementById('troco-info').style.display = 'block';

                }

            });

        });

 

        // Carregar o cardápio ao iniciar

        document.addEventListener('DOMContentLoaded', fetchMenuData);

       

    </script>

</body>

</html>
